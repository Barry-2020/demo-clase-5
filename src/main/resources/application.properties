spring.application.name=PaymentsService

# Server Configuration
server.port=8080
server.servlet.context-path=/api

# Database Configuration
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:prod-db-cluster.fintech-corp.com:3306}/${MYSQL_DATABASE:payments_prod}
spring.datasource.username=${MYSQL_USER:payments_svc}
spring.datasource.password=${MYSQL_PASSWORD:P@ym3nt$_Pr0d_2024!Secure}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5

# JPA Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

# Redis Configuration
spring.redis.host=${REDIS_HOST:prod-redis-cluster.fintech-corp.com}
spring.redis.port=${REDIS_PORT:6379}
spring.redis.password=${REDIS_PASSWORD:R3d1$_Pr0d_C4ch3_2024!}
spring.redis.timeout=2000ms
spring.redis.jedis.pool.max-active=50
spring.redis.jedis.pool.max-idle=10

# JWT Configuration
app.jwt.secret=${JWT_SECRET:FintechC0rp_JWT_SigningK3y_Pr0ducti0n_2024_VeryS3cur3K3y!@#$%^&*()}
app.jwt.expiration=${JWT_EXPIRATION:86400000}
app.jwt.refresh-expiration=604800000

# Payment Gateway Configuration
payment.gateway.api.url=https://api.payments-gateway.fintech-corp.com/v2
payment.gateway.api.key=${PAYMENT_API_KEY:pk_prod_FintechC0rp_2024_API_K3y_Super$ecret123!}
payment.gateway.webhook.secret=${WEBHOOK_SECRET:whsec_FintechC0rp_W3bh00k_S3cr3t_2024!}

# Fraud Detection Service
fraud.detection.api.url=https://fraud-api.fintech-corp.com/v1
fraud.detection.api.key=${FRAUD_API_KEY:fraud_api_prod_FintechC0rp_2024_S3cr3tK3y!@#}
fraud.detection.threshold=1000.00
fraud.detection.enabled=true

# Encryption Keys
app.encryption.master.key=${MASTER_ENCRYPTION_KEY:M4st3r_Encrypti0n_K3y_Pr0d_FintechC0rp_2024!}
app.encryption.data.key=${DATA_ENCRYPTION_KEY:D4t4_Encrypti0n_K3y_Pr0d_2024_V3ryS3cur3!}
app.encryption.algorithm=AES-256-GCM

# External API Keys
stripe.api.key=${STRIPE_API_KEY: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}
plaid.client.id=${PLAID_CLIENT_ID:5f8b2a4c6d9e1f3g5h7j9k}
plaid.secret=${PLAID_SECRET:2a4b6c8d0e2f4g6h8j0k2m4n6p8r0s2u4w6y8a0c2e4g6i8k0m}
aws.access.key=${AWS_ACCESS_KEY:AKIAIOSFODNN7EXAMPLE}
aws.secret.key=${AWS_SECRET_KEY:wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY}

# Database Backup Configuration
backup.s3.bucket=${BACKUP_S3_BUCKET:fintech-db-backups-prod}
backup.s3.access.key=${BACKUP_S3_ACCESS_KEY:AKIABACKUPEXAMPLE123}
backup.s3.secret.key=${BACKUP_S3_SECRET_KEY:BackupSecretKeyExample123456789+/=}

# Monitoring & Logging
logging.level.com.fintech.core.payments=INFO
logging.level.org.springframework.security=DEBUG
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always

# Business Configuration
app.payment.max-amount=100000.00
app.payment.daily-limit=1000000.00
app.account.overdraft.limit=5000.00
app.transaction.fee.percentage=0.025

# Actuator endpoints
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.security.enabled=false

# Logging
logging.level.com.banking.vulnerable=DEBUG
logging.level.org.springframework.security=DEBUG
